syntax = "proto3";

package {{.ProtoPkgName}};

import "google/api/annotations.proto";
import "google/protobuf/struct.proto";
import "common.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "{{.Generated_PkgPath}};{{.Generated_PkgName}}";

{{ $core := .SvcGenerator.Adaptor.Core -}}
{{- $targetNode := .SvcGenerator.TargetNode -}}

service {{$targetNode.Name}}{
  rpc Create(google.protobuf.Struct) returns({{$targetNode.Name}}CreateResponse){
    option (google.api.http) = { post:"/{{toLowerCase $targetNode.Name}}" body:"*"  };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = { summary:"Create {{$targetNode.Name}}"};
  };

  rpc Query(curdboy.common.{{$core.Generated_QueryRequestStructName}}) returns({{ $targetNode.Name }}QueryResponse){
    option (google.api.http) = { get:"/{{toLowerCase $targetNode.Name}}"  };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = { summary:"Find {{$targetNode.Name}}"  };

  };
}

message {{ $targetNode.Name }}CreateResponse{
  {{ template "ProtoFieldType_From_EntFieldType" $targetNode.ID.Type.Type }} id =1;
}

message {{.Generated_Proto_QueryResponseMessageName}}{
  {{ $targetNode.Name }}QueryResponseMeta meta =1;
  repeated google.protobuf.Struct data=2;
}

message  {{.Generated_Proto_QueryResponseMetaMessageName}} {
  int64 count =1;
}


{{- define "ProtoFieldType_From_EntFieldType" -}}
  {{- $entFieldType := . -}}
  {{- $entFieldTypeStr := $entFieldType.String -}}
  {{- if eq $entFieldTypeStr "string" -}}
    string
  {{- else if eq $entFieldTypeStr "int" -}}
    int32
  {{- else -}}
    ERROR UNDEFINED ENT FIELD TYPE < {{ $entFieldTypeStr }} >
  {{- end -}}
{{- end -}}
